- name: "Install repository package"
  yum: 
    state: present
    pkg: "https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ (ansible_distribution_version | splitext)[0] }}-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
  environment: "{{ proxy_env }}"
  
- name: install PostgreSQL
  yum:
    name: postgresql{{ ver }}-server
  environment: "{{ proxy_env }}"

- name: install PostgreSQL
  yum:
    name: postgresql{{ ver }}-contrib
  environment: "{{ proxy_env }}"
  tags: 
    - reconfigure

- name: install psycopg2
  yum:
    name: python-psycopg2
  environment: "{{ proxy_env }}"

- name: disable build-in module for centos 8
  shell: dnf -qy module disable postgresql
  when: ansible_distribution == 'CentOS' and (ansible_distribution_version | splitext)[0] == '8'

- name: init db
  shell: if [ ! -f /var/lib/pgsql/{{ ver }}/data/PG_VERSION ]; then /usr/pgsql-{{ ver }}/bin/postgresql-{{ ver }}-setup initdb; fi

- name: Enable end start PostgreSQL service
  systemd:
    name: postgresql-{{ ver }}
    state: started
    enabled: yes
  

- name: Template configuration file to postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: '/var/lib/pgsql/{{ ver }}/data/postgresql.conf'
  notify:
    - restart pgsql
  tags: reconfigure

- name: Template configuration file to pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: '/var/lib/pgsql/{{ ver }}/data/pg_hba.conf'
  notify:
    - restart pgsql
  tags: reconfigure   

- name: Open ports for pgsql
  firewalld:
    port: "5432/tcp"
    permanent: yes
    state: enabled
    immediate: yes

- name: Create a directory for archive log if it does not exist
  file:
    path: '{{ archive_path }}'
    state: directory
    owner: 'postgres'
    group: 'postgres'
  tags:
    - backup

- name: Create a directory for backup if it does not exist
  file:
    path: '{{ backup_path }}/last'
    state: directory
    owner: 'postgres'
    group: 'postgres'
  tags:
    - backup
    
- name: Restart PostgreSQL service
  systemd:
    name: postgresql-{{ ver }}
    state: restarted
  tags: reconfigure
  
- name: set password for postgres
  postgresql_user:
    db: postgres
    user: postgres
    password: '{{ pgpassword }}'
  become_user: postgres
  become: yes
  tags: reconfigure

- name: set password for postgres
  postgresql_user:
    db: postgres
    user: repuser
    password: '{{ reppassword }}'
    role_attr_flags: REPLICATION
  become_user: postgres
  become: yes
  tags: reconfigure

- name: Set master_ip
  set_fact:
    master_ip: "{% for host in groups['pg'] %} {% if 'master' in hostvars[host] and hostvars[host]['master'] in [ 'yes', 'Yes', 'YES', 'TRUE', 'True', 'true', True ] %} {{ hostvars[host]['ansible_default_ipv4']['address'] }} {% endif %} {% endfor %}"

- name: Stop PostgreSQL service on replica
  systemd:
    name: postgresql-{{ ver }}
    state: stopped
  when: master not in ['yes', 'Yes', 'YES', 'TRUE', 'True', 'true', True]
  
- name: copy data to replicas
  shell: rm -rf /var/lib/pgsql/12/data/*; pg_basebackup  --progress --write-recovery-conf --wal-method=stream --checkpoint=fast --host {{ master_ip }} --username repuser --pgdata=/var/lib/pgsql/12/data -C -S pgstandby_{{inventory_hostname | replace('-','_') }}
  when: master not in ['yes', 'Yes', 'YES', 'TRUE', 'True', 'true', True]
  become_user: postgres
  become: yes
  environment:
      PGPASSWORD: '{{ reppassword }}'
